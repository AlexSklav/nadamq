{% set PKG_NAME = 'nadamq' %}
{% set LIB_NAME = 'NadaMQ' %}
{% set MODULE_NAME = 'nadamq' %}

{% if GIT_DESCRIBE_NUMBER > '0' %}
{% set GIT_VERSION = GIT_DESCRIBE_TAG[1:] + '.post' + GIT_DESCRIBE_NUMBER %}
{% else %}
{% set GIT_VERSION = GIT_DESCRIBE_TAG[1:] %}
{% endif %}
# source will be downloaded prior to filling in jinja templates
# Example assumes that this folder has setup.py in it
source:
  git_url: ../

package:
  name: nadamq
  #: .. versionchanged:: 0.15
  #:     Use git describe tag as version.  If not on a tag, append
  #:     `.post<describe number>`.
  version: {{ GIT_VERSION }}

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  number: 0
  script:
    # Generate `setup.py` from `pavement.py` definition.
    - python -m paver generate_setup
    # Generate `packet_actions.cpp` from ragel state machine source.
    - python -m paver copy_packet_actions
    # Install source directory as Python package.
    - python setup.py install --single-version-externally-managed --record record.txt
    # Run build tests
    - python -m paver build_ext --inplace
    - nosetests -v nadamq\tests
    # Copy Arduino library files to Conda Arduino library.
    - python -c
      "import os.path; import os; import shutil;
      import platformio_helpers as pioh; import path_helpers as ph;
      install_dir = pioh.conda_arduino_include_path().joinpath('{{ LIB_NAME }}');
      install_dir.makedirs_p();
      src_dir = ph.path(os.environ['SRC_DIR']).joinpath('nadamq', 'src');
      {%- for file_i in ('NadaMQ.h', 'output_buffer.h', 'packet_handler.h') %}
      src_file = src_dir.joinpath('Arduino', 'packet_handler', '{{ file_i }}');
      shutil.copy2(src_file, install_dir.joinpath(src_file.name));
      {%- endfor %}
      {%- for file_i in ('BufferAllocator.h', 'Packet.h', 'PacketAllocator.h',
                        'PacketHandler.h', 'PacketParser.h', 'PacketSocket.h',
                        'PacketSocketEvents.h', 'PacketStream.h',
                        'PacketWriter.h', 'SimpleCommand.h',
                        'StreamPacketParser.h', 'crc-16.cpp', 'crc-16.h',
                        'crc_common.cpp', 'crc_common.h', 'packet_actions.cpp') %}
      shutil.copy2(src_dir.joinpath('{{ file_i }}'), install_dir.joinpath('{{ file_i }}'));
      {%- endfor %}
      "

requirements:
  build:
    - ragel >=6.10
    - msinttypes  # [win and py2k]

  #: .. versionadded:: 0.15.2
  #:     Fix `#4 <https://github.com/sci-bots/nadamq/issues/4>`_.
  host:
    - c-array-defs >=1.3
    - cython
    - future
    - nose
    - numpy
    #: .. versionadded:: 0.14
    - or-event >=0.2.1
    - path_helpers >=0.7
    - paver
    - platformio-helpers >=0.8
    - ragel >=6.10
    - si-prefix >=1.2.1
    - scons
    #: .. versionchanged:: 0.15
    - python
    #: .. versionadded:: 0.15
    #: .. versionchanged:: 0.15.3
    #:     Move to ``requirements.host``.
    - msinttypes  # [win and py2k]

# .. versionadded:: 0.17
#     Split into `noarch` C++ header package and platform-specific Python
#     package.
outputs:
  - name: nadamq-dev
    noarch: generic
    files:
      - share
  - name: nadamq
    files:
      - Lib/site-packages/{{ MODULE_NAME }}
    requirements:
      run:
        - {{ pin_subpackage('nadamq-dev', max_pin='x.x') }}
        #: .. versionadded:: 0.15
        - future
        #: .. versionchanged:: 0.15
        - python
        - c-array-defs >=1.3
        - numpy
        #: .. versionadded:: 0.14
        - or-event >=0.2.1
        - si-prefix >=1.2.1
    test:
      imports:
        - nadamq
        - nadamq.NadaMq

about:
  home: https://github.com/sci-bots/nadamq
  license: MIT
